---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by mayd.
--- DateTime: 2020/6/19 11:54
---

local CC = require("CC")

local ImageShareView = CC.uu.ClassView("ImageShareView")

--活动图片分享
--[[
@param
extraData:
    gameId:游戏id
    其他扩展参数(通过连接回传游戏)

imgName:分享的图片名称(命名规则share_[gameid]_[编号], 例子: 大厅分享图:share_1_1)
abName:ab包名
callback:界面关闭回调
shareCallBack:分享成功后切后台返回回调
content: 文本分享内容

]]
function ImageShareView:ctor(param)

    self.param = param or {}

    self.param.abName = self.param.abName or "image"

    self.param.content = self.param.content or ""

    self.param.extraData = self.param.extraData or { gameId = 1 }

    if self.param.extraData.gameId == 1 then

        self.param.abName = CC.DefineCenter.Inst():getConfigDataByKey("ResourceDefine").Image[self.param.imgName] or "image";
    end

    self.language = CC.LanguageManager.GetLanguage("L_CaptureScreenShareView");

    self.shareSucc = false

    self.textureCache = nil;

    self.imgUrl = nil;
end

function ImageShareView:OnCreate()

    self:InitUI()

    self:InitTextByLanguage()

    self:AddUIEvent()

    self:ShowImage()

end

function ImageShareView:InitUI()

    self.layer_UI = self:FindChild("Layer_UI")

    self.rawImg = self:SubGet("Layer_UI/Center/Img","RawImage")

end

function ImageShareView:AddUIEvent()

    self:AddClick("Layer_UI/BtnGroup/BtnFitter/BtnFaceBook", "OnClickShareToFacebook");

    self:AddClick("Layer_UI/BtnGroup/BtnFitter/BtnLine", "OnClickShareToLine");

    self:AddClick("Layer_UI/BtnGroup/BtnFitter/BtnOther","OnClickShareToOther");

    self:AddClick("Layer_UI/BtnGroup/BtnSavePhoto", "OnClickSaveToPhotoAlbum");

    self:AddClick("Layer_UI/BtnGroup/BtnClose", function() self:Destroy() end);
end

function ImageShareView:DisplayClose(active)
    self:FindChild("Layer_UI/BtnGroup/BtnClose"):SetActive(active)
end

function ImageShareView:ShowImage()
    if self.param.imgName then

        self.texture = ResourceManager.LoadAsset(self.param.abName, self.param.imgName)

        self.rawImg.texture = self.texture

        self.imgUrl = CC.DataMgrCenter.Inst():GetDataByKey("WebUrl").GetTextureFixedShareUrl(self.param.imgName);
    else
        logError("---------> ImageShareView 没有分享的图片 imgName:" .. tostring(self.imgName))
    end


end

-- 获取分享链接参数
function ImageShareView:GetLinkParam()
    local param = {
        webTitle = self.param.webTitle,
        webText = self.param.webText,
        file = self.imgUrl,
        urlData = {
            extraData = Util.EncodeBase64(Json.encode(self.param.extraData))
        },
        errCb = function()
            self:SetCanClick(true);
            if self.param.errCb then
                self.param.errCb();
            end
        end,
        succCb = nil
    }
    return param
end

function ImageShareView:OnClickShareToFacebook()

    if not CC.HallUtil.JudgeHaveFacebookApp() then
        return;
    end

    self:SetCanClick(false)

    local param = self:GetLinkParam();
    param.succCb = function(url)
        local data = {};
        data.contentURL = url;
        data.callback = function(status)
            CC.uu.Log(" -----> FacebookUtil.ShareLink cb " .. tostring(status));
        end
        self.shareSucc = true
        CC.SubGameInterface.ShareLinkToFacebook(data)
    end
    CC.HallUtil.CreateShareLink(param)
end

function ImageShareView:OnClickShareToLine()

    if not CC.HallUtil.JudgeHaveLineApp() then
        return;
    end

    self:SetCanClick(false)

    local param = self:GetLinkParam();
    param.succCb = function(url)
        self.shareSucc = true
        CC.SubGameInterface.ShareTextToLine(url)
    end
    CC.HallUtil.CreateShareLink(param)
end

function ImageShareView:OnClickShareToOther()
    self:SetCanClick(false)

    local param = self:GetLinkParam();
    param.succCb = function(url)
        self.shareSucc = true
        CC.SubGameInterface.ShareTextToOther({text = url,callback = function ()
            log("----->分享成功 ImageShareView ")
            --ios平台以webview形式启动分享的app，不走前后台切换，所以在回调接口处理
            if not CC.Platform.isIOS then return end
            self:SetCanClick(true)
            CC.Request("ReqOnClientShare", {ShareType = self.param.shareType or CC.shared_enums_pb.ClientShareCommon})
        end})
    end
    CC.HallUtil.CreateShareLink(param)
end

function ImageShareView:OnClickSaveToPhotoAlbum()

    if not self.texture then return end
    if not self.textureCache then
        self.textureCache = Texture2D(self.texture.width, self.texture.height,UnityEngine.TextureFormat.RGBA32, false)
        self.textureCache:SetPixels(self.texture:GetPixels())
    end
    local bytes = UnityEngine.ImageConversion.EncodeToPNG(self.textureCache)
    --ios返回的保存状态有误,这里直接提示保存图片成功
    Client.SaveToPhotoAlbum(bytes)
    CC.ViewManager.ShowTip(self.language.saveSuccess)

    -- if Client.SaveToPhotoAlbum(bytes) then
    --     CC.ViewManager.ShowTip(self.language.saveSuccess)
    -- else
    --     CC.ViewManager.ShowTip(self.language.saveFailed)
    -- end
end

function ImageShareView:InitTextByLanguage()

    self:FindChild("Layer_UI/BtnGroup/BtnSavePhoto/Text").text = self.language.btnSave;
    self:FindChild("Layer_UI/BtnGroup/BtnFitter/BtnFaceBook/Text").text = self.language.btnFB;
    self:FindChild("Layer_UI/BtnGroup/BtnFitter/BtnLine/Text").text = self.language.btnLine;
    self:FindChild("Layer_UI/BtnGroup/BtnFitter/BtnOther/Text").text = self.language.btnOther;
end

function ImageShareView:OnResume()

    self:SetCanClick(true)

    if self.shareSucc then
        self.shareSucc = false
        log("----->分享成功 ImageShareView ")
        CC.Request("ReqOnClientShare", {ShareType = self.param.shareType or CC.shared_enums_pb.ClientShareCommon})
        if self.param.shareCallBack then
            self.param.shareCallBack(self)
        end
    end
end

function ImageShareView:ActionIn()
    self.layer_UI.localScale = Vector3(0.5,0.5,1)
    self:RunAction(self.layer_UI, {"scaleTo", 1, 1, 0.3, ease=CC.Action.EOutBack, function()

    end})
end

function ImageShareView:ActionOut()
    self:RunAction(self.layer_UI, {"scaleTo", 0.5, 0.5, 0.3, ease=CC.Action.EInBack, function()
        self:Destroy();
    end})
end

function ImageShareView:OnDestroy()

    if self.param.callback then
        self.param.callback();
    end

    if self.textureCache then
        GameObject.Destroy(self.textureCache);
    end
end

return ImageShareView